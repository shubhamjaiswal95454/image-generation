import streamlit as st
import requests
from PIL import Image
import io

# Securely load the Hugging Face token from Streamlit secrets
HF_TOKEN = st.secrets["hf"]["token"]

st.title("AI Image Generator from Text Description")

st.write("""
Describe any image you want, and AI will try to create it for you!
""")

st.markdown(
    """
    <div style='color: #d9534f; font-weight:bold;'>
    ⚠️ Use with caution: The image below is generated by artificial intelligence and may be incorrect, unrealistic, or biased.
    </div>
    """,
    unsafe_allow_html=True,
)

prompt = st.text_area("Enter your image description (prompt):", "")

if st.button("Generate Image"):
    if not prompt.strip():
        st.warning("Please enter a description to generate an image.")
    else:
        with st.spinner("Creating image... (may take a few seconds)"):
            api_url = "https://api-inference.huggingface.co/models/stabilityai/stable-diffusion-2"
            headers = {"Authorization": f"Bearer {HF_TOKEN}"}
            payload = {"inputs": prompt}
            response = requests.post(api_url, headers=headers, json=payload)
            if response.status_code == 200:
                try:
                    image = Image.open(io.BytesIO(response.content))
                    st.image(image, caption="AI Generated Image", use_container_width=True)
                except Exception as e:
                    st.error("Failed to display image. Please try again with a different prompt.")
            elif response.status_code == 503:
                st.info("The model is loading on Hugging Face. Please wait 30 seconds and try again.")
            else:
                st.error("Failed to generate image. Please try again later.")

st.markdown(
    """
    <div style='margin-top:1.5em; color: #d9534f;'>
    Note: This tool uses advanced AI to create images from descriptions, but it is not perfect. Results may be surprising, unusual, or inaccurate.
    </div>
    """,
    unsafe_allow_html=True,
)
